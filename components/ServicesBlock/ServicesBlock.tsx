'use client';

import Link from 'next/link';
import { useRef } from 'react';
import Image, { StaticImageData } from 'next/image';

import testImage1 from '../../images/servicesBlock/develop.png';
import testImage2 from '../../images/servicesBlock/support.png';
import testImage3 from '../../images/servicesBlock/promotion.png';
import testImage4 from '../../images/servicesBlock/html-coding.png';
import testImage5 from '../../images/servicesBlock/design.png';

type ServicesItemProps = {
  children?: any;
  linkHref: string;
  imgLink: string | StaticImageData;
  imgAlt: string;
};

export const ServicesListItem = ({
  children,
  linkHref,
  imgLink,
  imgAlt,
}: ServicesItemProps) => {
  const imgRef = useRef<HTMLImageElement>(null);
  const ImageWidth = 500;
  const ImageHeight = 500;

  const mouseMoveEvent = (event: { pageX: number; pageY: number }) => {
    if (imgRef.current !== null) {
      imgRef.current.style.top = event.pageY - ImageHeight / 2 + 'px';
      imgRef.current.style.left = event.pageX + 20 + 'px';
    }
  };

  const mouseEnterEvent = () => {
    if (imgRef.current !== null) {
      imgRef.current.style.display = 'inline-block';
    }
  };

  const mouseLeaveEvent = () => {
    if (imgRef.current !== null) {
      imgRef.current.style.display = 'none';
    }
  };

  return (
    <li className="text-2xl font-bold leading-snug lg:text-4xl md:text-3xl md:leading-snug lg:leading-snug lg:font-bold max-w-fit">
      <Link
        onMouseMove={mouseMoveEvent}
        onMouseLeave={mouseLeaveEvent}
        onMouseEnter={mouseEnterEvent}
        href={linkHref}
        className="relative z-10 hover:mix-blend-difference hover:text-whitePrimary/75 link text-stroke"
      >
        {children}
      </Link>
      <Image
        width={ImageWidth}
        height={ImageHeight}
        ref={imgRef}
        className={`hidden absolute z-10`}
        src={imgLink}
        alt={imgAlt}
        quality={100}
      />
    </li>
  );
};

const ServicesBlock = () => {
  return (
    <div className='lg:p-7 p-[clamp(0.1rem,3.8%,2rem)] flex flex-col justify-between h-full gap-9 '>
      <ul className="inline-flex flex-col w-full gap-2 text-lg">
        <ServicesListItem
          linkHref="/services"
          imgLink={testImage1}
          imgAlt="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤"
        >
          <span data-text={`–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞\u00A0—Å–∞–π—Ç–æ–≤`}>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤</span>
        </ServicesListItem>
        <ServicesListItem
          linkHref="/services"
          imgLink={testImage2}
          imgAlt="–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ"
        >
          <span data-text={`–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ`}>–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ</span>
        </ServicesListItem>
        <ServicesListItem
          linkHref="/services"
          imgLink={testImage3}
          imgAlt="–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ"
        >
          <span data-text={`–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ`}>–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ</span>
        </ServicesListItem>
        <ServicesListItem
          linkHref="/services"
          imgLink={testImage4}
          imgAlt="HTML –≤–µ—Ä—Å—Ç–∫–∞"
        >
          <span data-text={`HTML\u00A0–≤–µ—Ä—Å—Ç–∫–∞`}>HTML –≤–µ—Ä—Å—Ç–∫–∞</span>
        </ServicesListItem>
        <ServicesListItem linkHref="/services" imgLink={testImage5} imgAlt="–î–∏–∑–∞–π–Ω">
          <span data-text={`–î–∏–∑–∞–π–Ω`}>–î–∏–∑–∞–π–Ω</span>
        </ServicesListItem>
      </ul>
      <Link href="/services" className='leading-loose underline lg:text-base underline-offset-8 decoration-whitePrimary/30'><span className='text-4xl'>üêª</span> –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ <span className='whitespace-nowrap'>‚ùå –Ω–µ –º–µ–¥–≤–µ–∂—å–∏ —É—Å–ª—É–≥–∏</span></Link>

    </div>
  );
};

export default ServicesBlock;
